# Gerekli paketleri yükleme
options(repos = c(CRAN = "https://cran.rstudio.com"))
if (!requireNamespace("dplyr", quietly = TRUE)) {
install.packages("dplyr")
}
if (!requireNamespace("ggplot2", quietly = TRUE)) {
install.packages("ggplot2")
}
if (!requireNamespace("tidyr", quietly = TRUE)) {
install.packages("tidyr")
}
if (!requireNamespace("downloader", quietly = TRUE)) {
install.packages("downloader")
}
library(dplyr)
library(ggplot2)
library(tidyr)
# CSV dosyasını okuma
IMDB_data <- read.csv("imdb_top_1000 (1).csv")
# Gerekli paketleri yükleme
options(repos = c(CRAN = "https://cran.rstudio.com"))
if (!requireNamespace("dplyr", quietly = TRUE)) {
install.packages("dplyr")
}
if (!requireNamespace("ggplot2", quietly = TRUE)) {
install.packages("ggplot2")
}
if (!requireNamespace("tidyr", quietly = TRUE)) {
install.packages("tidyr")
}
if (!requireNamespace("downloader", quietly = TRUE)) {
install.packages("downloader")
}
library(dplyr)
library(ggplot2)
library(tidyr)
# CSV dosyasını okuma
IMDB_data <- read.csv("imdb_top_1000.csv")
# Released_Year ve Runtime sütunlarını numeric tipine dönüştürme
IMDB_data$Released_Year <- as.numeric(as.character(IMDB_data$Released_Year))
IMDB_data$Runtime <- as.numeric(as.character(IMDB_data$Runtime))
# Gross sütununu numeric tipine dönüştürme
IMDB_data$Gross <- as.numeric(gsub(",", "", as.character(IMDB_data$Gross)))
# Tür sütununu düzenleme (tür kombinasyonlarını ayırma)
IMDB_data$Genre <- gsub("/", ",", IMDB_data$Genre)
IMDB_data <- IMDB_data %>%
mutate(Genre = strsplit(as.character(Genre), ",")) %>%
unnest(Genre)
# Türlerin dağılımını hesaplama
tur_dagilimi <- IMDB_data %>%
group_by(Genre) %>%
summarise(film_sayisi = n()) %>%
arrange(desc(film_sayisi))
# Türlerin dağılımını görselleştirme
ggplot(tur_dagilimi[1:10, ], aes(x = reorder(Genre, film_sayisi), y = film_sayisi)) +
geom_col(fill = "steelblue") +
labs(title = "En Popüler Türlerin Dağılımı", x = "Tür", y = "Film Sayısı") +
install.packages("dplyr")
install.packages("ggplot2")
install.packages("tidyr")
# Gerekli paketleri yükleme
options(repos = c(CRAN = "https://cran.rstudio.com"))
if (!requireNamespace("dplyr", quietly = TRUE)) {
install.packages("dplyr")
}
if (!requireNamespace("ggplot2", quietly = TRUE)) {
install.packages("ggplot2")
}
if (!requireNamespace("tidyr", quietly = TRUE)) {
install.packages("tidyr")
}
if (!requireNamespace("downloader", quietly = TRUE)) {
install.packages("downloader")
}
library(dplyr)
library(ggplot2)
library(tidyr)
# CSV dosyasını okuma
IMDB_data <- read.csv("imdb_top_1000.csv")
# Released_Year ve Runtime sütunlarını numeric tipine dönüştürme
IMDB_data$Released_Year <- as.numeric(as.character(IMDB_data$Released_Year))
IMDB_data$Runtime <- as.numeric(as.character(IMDB_data$Runtime))
# Gross sütununu numeric tipine dönüştürme
IMDB_data$Gross <- as.numeric(gsub(",", "", as.character(IMDB_data$Gross)))
# Tür sütununu düzenleme (tür kombinasyonlarını ayırma)
IMDB_data$Genre <- gsub("/", ",", IMDB_data$Genre)
IMDB_data <- IMDB_data %>%
mutate(Genre = strsplit(as.character(Genre), ",")) %>%
unnest(Genre)
# Türlerin dağılımını hesaplama
tur_dagilimi <- IMDB_data %>%
group_by(Genre) %>%
summarise(film_sayisi = n()) %>%
arrange(desc(film_sayisi))
# Türlerin dağılımını görselleştirme
ggplot(tur_dagilimi[1:10, ], aes(x = reorder(Genre, film_sayisi), y = film_sayisi)) +
geom_col(fill = "steelblue") +
labs(title = "En Popüler Türlerin Dağılımı", x = "Tür", y = "Film Sayısı") +
install.packages("downloader")
library(dplyr)
library(ggplot2)
library(tidyr)
# Gerekli paketleri yükleme
options(repos = c(CRAN = "https://cran.rstudio.com"))
if (!requireNamespace("dplyr", quietly = TRUE)) {
install.packages("dplyr")
}
if (!requireNamespace("ggplot2", quietly = TRUE)) {
install.packages("ggplot2")
}
if (!requireNamespace("tidyr", quietly = TRUE)) {
install.packages("tidyr")
}
if (!requireNamespace("downloader", quietly = TRUE)) {
install.packages("downloader")
}
library(dplyr)
library(ggplot2)
library(tidyr)
# CSV dosyasını okuma
IMDB_data <- read.csv("imdb_top_1000.csv")
# Released_Year ve Runtime sütunlarını numeric tipine dönüştürme
IMDB_data$Released_Year <- as.numeric(as.character(IMDB_data$Released_Year))
IMDB_data$Runtime <- as.numeric(as.character(IMDB_data$Runtime))
# Gross sütununu numeric tipine dönüştürme
IMDB_data$Gross <- as.numeric(gsub(",", "", as.character(IMDB_data$Gross)))
# Tür sütununu düzenleme (tür kombinasyonlarını ayırma)
IMDB_data$Genre <- gsub("/", ",", IMDB_data$Genre)
IMDB_data <- IMDB_data %>%
mutate(Genre = strsplit(as.character(Genre), ",")) %>%
unnest(Genre)
# Türlerin dağılımını hesaplama
tur_dagilimi <- IMDB_data %>%
group_by(Genre) %>%
summarise(film_sayisi = n()) %>%
arrange(desc(film_sayisi))
# Türlerin dağılımını görselleştirme
ggplot(tur_dagilimi[1:10, ], aes(x = reorder(Genre, film_sayisi), y = film_sayisi)) +
geom_col(fill = "steelblue") +
labs(title = "En Popüler Türlerin Dağılımı", x = "Tür", y = "Film Sayısı") +
coord_flip() +
theme_minimal()
# Türlerin yıllara göre gelirini hesaplama
gelir_turlere_gore <- IMDB_data %>%
group_by(Genre, Released_Year) %>%
summarise(toplam_gelir = sum(Gross, na.rm = TRUE)) %>%
arrange(Genre, Released_Year)
# İstenen türlerin listesi
istenilen_turler <- c("Action", "Comedy", "Drama", "Horror", "Western")
# Türlerin yıllara göre gelirini hesaplama ve istenilen türleri filtreleme
gelir_turlere_gore_filtreli <- gelir_turlere_gore %>%
filter(Genre %in% istenilen_turler)
# Çizgi grafiği oluşturma
ggplot(gelir_turlere_gore_filtreli, aes(x = Released_Year, y = toplam_gelir, color = Genre)) +
geom_line() +
labs(title = "Belirli Türlerin Yıllara Göre Geliri", x = "Yıl", y = "Toplam Gelir") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Türlerin yıllara göre gelirini hesaplama
MDB_data <- na.omit(IMDB_data)
# Yönetmen başarı tablosunu oluşturma
yonetmen_basari <- IMDB_data %>%
group_by(Director) %>%
summarise(
ortalama_puan = mean(IMDB_Rating, na.rm = TRUE),
toplam_gelir = sum(Gross, na.rm = TRUE)
) %>%
arrange(desc(ortalama_puan), desc(toplam_gelir))
# Tabloyu görüntüleme
print(yonetmen_basari)
